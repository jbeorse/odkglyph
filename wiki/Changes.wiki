#summary Changes from original ODK Collect and javarosa core

=ODK Collect:= 

*org.odk.collect.android.views QuestionView

{{{
public void buildView(PromptElement p)
}}}
  call function AddQuestionImage(p);

{{{
private void AddOneImage(final String imagePath)
}}}
  add imageView for each singal image with click listener for separate view

{{{
void AddQuestionImage(PromptElement p)
}}}
  add images to question

*org.odk.collect.android.logic PromptElement

{{{
ArrayList<String> getQuestionImages()
}}}
return a list of images for each question

*org.odk.collect.android.widgets SelectMultiWidget
==Jeff ==

*org.odk.collect.android.widgets SelectOneWidget
==Jeff ==

= Javarosa Core: = 

*package org.javarosa.core.model FormDef

{{{
public void setImageSource(Hashtable<String, ArrayList<String>> iimage)
 }}}
  set the iimage framework image set

{{{
public Hashtable<String, ArrayList<String>> getImageSource()
}}}
  return image set lookup table

*org.javarosa.core.model QuestionDef
{{{
	private Hashtable<String,String> otherAttribute;
	private ArrayList<String> imageSet;
	private String imagePath;
}}}
private field to store all other attribute in the <label> element, image set and one image path

{{{
public void setImageSet(ArrayList<String> imgSet)
}}}

{{{
ArrayList<String> getImageSet()
}}}

{{{
public void setImagePath(String imgPath)
}}}

{{{
public String getImagePath()
}}}

{{{
public Hashtable<String,String> getOtherAttribute()
}}}

{{{
public void setOtherAttribute(Hashtable<String,String> otherAttribute)
}}}

==Jeff will write the answer change for image in answer==

*org.javarosa.xform.parse XFormParser

{{{
private static void parseModel}}}
  modify to check iimage element, call {{{parseIImage(f, child)
}}}

{{{
private static void parseIImage(FormDef f, Element iimage)
}}}
  modify to check imageSet and call {{{parseImageSet}}}

{{{
private static void parseImageSet(Hashtable<String, ArrayList<String>> iimageTable, Element imageset)
 }}}
  parse each imageSet, call 
{{{
parseImage
}}}

{{{
private static void parseImage(ArrayList<String> imageList, Element image)
}}}
  parse image within one imageset

{{{
private static void parseQuestionLabel
}}}
 parse img attribute in label element and also pass all attributes

==Jeff will write the answer change for image in answer==


== What need to be changed, but not included(lower priority) == 

*in QuestionDef: extend equals  to compare other private fields

*in XFormParser: error handling for verifyMapping between iimage framework and image jr:iimage('Setname')
